
// Structural elements
body {
  background: $backgroundColour;
  color: $bodyColour;
  height: 100%;
  display: flex;
  @include flex-direction(column);
  overflow-x: hidden;
}

.container {
  width: 90%;
  max-width: 1200px;
  margin: 0 auto;
}
.flex-container-row {
  @include flexbox;
  @include flex-direction(row);
  @include justify-content(space-around);
  padding: 1rem 0;
  @include breakpoint(break-1) {
    @include align-items(center);
  }
}


/* The navigation bar */
.navbar {
  
  position: fixed; /* Set the navbar to fixed position */
  bottom: 2%;
  margin: auto;
  width: 85%; /* Full width */
  max-width: 1200px;
  text-align: center;
  background-image: linear-gradient(to right,rgba(104, 199, 222, 0.95) 0%,rgba(108, 190, 220, 0.90) 65%,rgba(110, 181, 218, 0.87) 75%,
  rgba(118, 170, 216, 0.85) 85%,rgba(124, 161, 213, 0.80) 100%);
  left: 50%;
  transform: translate(-50%, 0);
  border-radius: 15px;
  
}

.navbar-norm
{
  position: absolute; /* Set the navbar to fixed position */
  top: 33%;
  margin: auto;
  width: 100%; /* Full width */
  // max-width: 1200px;
  text-align: center;
  background-image: linear-gradient(to bottom,rgba(104, 199, 222, 0.95) 0%,rgba(108, 190, 220, 0.90) 65%,rgba(110, 181, 218, 0.87) 75%,
  rgba(118, 170, 216, 0.85) 85%,rgba(124, 161, 213, 0.80) 100%);
  left: 50%;
  transform: translate(-50%, 0);
  // border-radius: 15px;
  
  
}

/* Links inside the navbar */
.navbar .navbar-norm a {
  display: flex;
  color: #000000;
  text-align: center;
  padding: 14px 16px;
  text-decoration: none;
  flex: 1;
}

/* Change background on mouse-over */
.navbar .navbar-norm a:hover {
  color: #ddd;
}


// Header, feature and footer
.header,
.footer {
  .nav {
    text-align: right;
  }
  // .logo {
  //   @include flex(0 0 auto);
  // }
  .container {
    @include flexbox;
    @include flex-direction(row);
    @include justify-content(space-between);
    padding: 1rem 0;
    @include breakpoint(break-1) {
      @include align-items(center);
    }
  }
}

.header .nav {
  display: flex;
  flex-direction: column-reverse;
  align-items: flex-end;
}

.feature {
  padding-bottom: .4rem;
  margin-bottom: 1.6rem;
  text-align: center;
  background: $featureBackgroundColour;
  background-size: cover;
  background-position: center;
  .container {
    min-height: 35vh;
    max-width: 60%;
    @include flex-direction(column);
    @include justify-content(center);
  }
}

@mixin transition($transition...) {
  -moz-transition:    $transition;
  -o-transition:      $transition;
  -webkit-transition: $transition;
  transition:         $transition;
}
@mixin transition-property($property...) {
  -moz-transition-property:    $property;
  -o-transition-property:      $property;
  -webkit-transition-property: $property;
  transition-property:         $property;
}
@mixin transition-duration($duration...) {
  -moz-transition-property:    $duration;
  -o-transition-property:      $duration;
  -webkit-transition-property: $duration;
  transition-property:         $duration;
}
@mixin transition-timing-function($timing...) {
  -moz-transition-timing-function:    $timing;
  -o-transition-timing-function:      $timing;
  -webkit-transition-timing-function: $timing;
  transition-timing-function:         $timing;
}
@mixin transition-delay($delay...) {
  -moz-transition-delay:    $delay;
  -o-transition-delay:      $delay;
  -webkit-transition-delay: $delay;
  transition-delay:         $delay;
}

.logo {
  // display: block;
  max-width: 6rem;
  max-height:6rem;
  // @include flexbox;
  // @include align-items(center);
  position: relative;
  img {
    max-width: 6rem;
    max-height:6rem;
    width: auto;
    height: auto;
    @include transition(transform .5s);
    &:hover
    {
      transform: scale(1.15,1.15);
      animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both;
      transform: translate3d(0, 0, 0);
      
    }
  }
  @keyframes shake {
    10%, 90% {
    transform: translate3d(-1px, 2px, 0);
    }
    
    20%, 80% {
    transform: translate3d(2px, -1px, 0);
    }
    
    30%, 50%, 70% {
    transform: translate3d(-4px, 4px, 0);
    }
    
    40%, 60% {
    transform: translate3d(4px, -4px, 0);
    }
    }
  
}

.nav {
  a {
    padding: .2rem;
  }
  &--social a {
    display: inline-block;
    line-height: 1;
  }
}

.small {
  padding-top: .8rem;
  color: $captionColour;
  display: inline-block;
}

.footer {
  background: $headingColour;
  color: $captionColour;
  a {
    color: $captionColour;
    &:hover {
      color: $backgroundColour;
    }
  }
  .container {
    @include flex-wrap(wrap);
  }
  .small {
    padding-top: 0;
  }
}


// Pagination nav
.nav--paginator {
  @include flexbox;
  @include justify-content(space-between);
  color: $captionColour;
  text-align: center;
}

.pagination {
  max-width: 40%;
}


// Main content
.main {
  @include flexbox;
  @include flex-direction(column);
  @include flex(1, 0, auto);
  @include justify-content(flex-start);
  margin-bottom: 1.6rem;
  @include breakpoint(break-1) {
    @include justify-content(center);
    @include flex-direction(row);
  }
}

.header,
.footer {
  @include flex(0, 0, auto);
}

.content {
  @include breakpoint(break-1) {
    width: 62%;
  }
}

.share .button {
    margin-right: .3rem;
}



.aside {
  @include breakpoint(break-1) {
    max-width: 34%;
    margin-left: 4%;
    @include flex(1, 0, auto);
    opacity: 0.5;
    transition: opacity .1s;
    .section {
      position: sticky;
      top: 0;
    }
    &--left {
      margin-left: 0;
      margin-right: 4%;
      order: -1;
    }
    &:hover {
      opacity: 1;
    }
  }
}

.section {
  margin: 0;
}


// Lists
.list {
  list-style: none;
  &--nav {
    overflow: hidden;
    transition: .2s;
  }
  .item--post,
  .item--result,
  .item--category {
    margin-left: 0;
  }
}

@for $i from 1 to length($colors){
  .nav-button-item:nth-of-type(#{$i})
  {
    background: nth($colors, $i);
    &:hover
    {
      background: lighten( nth($colors, $i), 15%)
    }    
  }
}

 .button-item, .nav-button-item  {
  width:15%;
  margin-right: -5px;
  &--nav {
    @include breakpoint(break-1) {
      display: inline-block;
    }
  }
  a
  {
    display: block;
  }
  &--current {
    a {
      color: $captionColour;
    }
  }
}

.item  {
  &--nav {
    @include breakpoint(break-1) {
      margin-left: .4rem;
      display: inline-block;
    }
    &:first-of-type {
      margin-left: 0;
    }
  }
  &--current {
    a {
      color: $captionColour;
    }
  }
}

/* Bottom left text */
.bottom-left {
  position: absolute;
  bottom: 8px;
  left: 16px;
}

/* Top left text */
.top-left {
  position: absolute;
  top: 8px;
  left: 16px;
}

/* Top right text */
.top-right {
  position: absolute;
  top: 8px;
  right: 16px;
}

/* Bottom right text */
.bottom-right {
  position: absolute;
  bottom: 8px;
  right: 16px;
}

/* Centered text */
.centered {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

$position:("left","right");
$box-width: calc(100%/length($position));


@for $i from 1 to length($position)+1{
.box-#{nth($position,$i)} {
  position: relative;
  @if (#{nth($position,$i)}=="right"){
    margin-left: 1rem;
  }
  margin-#{nth($position,$i)}: auto;
  max-width: $box-width;
  text-align: center;
  @if ($debug){
    background-color: nth($colors,$i);
  }
}



// Links, icons and images
a .icon {
  transition: fill .1s;
  &:hover {
    fill: currentColor;
  }
}

.icon {
  vertical-align: middle;
  width: 1.1em;
  height: 1.1em;
  fill: CurrentColor;
}

// Media content
img {
  max-width: 100%;
  height: auto;
}

.img-button {
  max-width: 100%;
  height: auto;
  line-height: 0;
  transition: all $scaleSpeed ease-in-out;
  &--left {
    float: left;
    padding-right: .8rem;
  }
  &--right {
    float: right;
    text-align: right;
    padding-left: .8rem;
  }
  &--center {
    text-align: center;
    clear: both;
  }
}
a {
  .img-button{
    &:hover{
      transform: scale($scaleAmount,$scaleAmount);
    }
  }
}
.bottom-left
{
  transition: all $scaleSpeed ease-in-out;
  a:hover &
  {
    transform: scale($scaleAmount,$scaleAmount);
  }
}

.bg {

    /* Full height */
    height: 100%; 

    /* Center and scale the image nicely */
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
}

.figure {
  line-height: 0;
  &--left {
    float: left;
    padding-right: .8rem;
  }
  &--right {
    float: right;
    text-align: right;
    padding-left: .8rem;
  }
  &--center {
    text-align: center;
    clear: both;
  }
}

.video,
.map {
  position: relative;
  padding-bottom: 56.25%;
  height: 0;
  iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

.map {
  padding-bottom: 70%;
}

.figure,.figure-button,
.video,
.map {
  margin-bottom: .8rem;
}

audio,
video {
  width: 100%;
}


// Form elements and buttons
button,
.button,
input[type="text"],
input[type="email"],
input[type="search"],
input[type="submit"],
input[type="color"],
textarea,
select{
  padding: .6rem 1.2rem;
  margin-bottom: .6rem;
  transition: color .1s, background-color .1s, border .1s;
  line-height: inherit;
  border: none;
  box-shadow: none;
  border-radius: 0;
  -webkit-appearance: none;
  .icon {
    margin: 0 0 .35rem;
  }
}

input[type="submit"],
button,
.button,/*.button-item,*/ .nav-button-item {
  cursor: pointer;
  display: inline-block;
  color: $backgroundColour;
  background: $accentColour;
  transition: box-shadow .1s;
  will-change: box-shadow;
  box-shadow: inset 0 0 0 2rem transparent;
  &:hover {
    box-shadow: inset 0 0 0 2rem rgba(0,0,0,0.25);
  }
  &:active,
  &:focus {
    box-shadow: inset 0 0 0 2rem rgba(0,0,0,0.25);
  }
}

button, .button-item, .nav-button-item --nav {
  @include breakpoint(break-1) {
    display: none;
  }
  background: none;
  color: $linkColour;
  margin-bottom: 0;
  min-height: 4rem;
  min-width: 4rem;
  &:hover,
  &:focus {
    box-shadow: none;
    color: $hoverColour;
    transform: scale(1.5,1.5);
  }
}

a,
button,
.button,
input,
textarea,
select,.button-item, .nav-button-item {
  &:focus,
  &:hover:focus {
    outline: solid .12rem $focusColour;
    outline-offset: -.12rem;
  }
}

a:hover:focus {
  outline: none;
}

input[type="text"],
input[type="email"],
input[type="search"],
input[type="color"],
textarea,
select {
  width: 100%;
  border: 1px solid $captionColour;
  &:hover {
    border-color: $bodyColour;
  }
}

select {
  background: $codeBackgroundColour;
}

textarea {
    resize: vertical;
}



label {
  @include baseline($fontsize:zeta, $font: $bodytype, $lineheight: 2, $below: 2, $breakpoint: all);
}

code {
  padding: .12rem .2rem;
  color: $headingColour;
}

pre code {
  padding: 0;
}

.required {
  color: red;
}

::-webkit-input-placeholder {
  opacity: 0.5;
}
::-moz-placeholder {
  opacity: 0.5;
}
:-ms-input-placeholder {
  opacity: 0.5;
}
:-moz-placeholder {
  opacity: 0.5;
}

::selection {
  background: $headingColour;
  color: $backgroundColour;
  text-shadow: none;
}


// Sassline overrides
.typeset {
  a > code {
    text-shadow: none;
  }
  .button,
  button, .button-item,.nav-button-item {
    background-image: none;
    text-shadow: none;
    color: $backgroundColour;
    &:hover,
    &:active,
    &:focus {
      background-image: none;
      color: $backgroundColour;
    }
  }
  hr {
    width: 100%;
  }
  li {
    > p {
      padding: 0;
      margin: 0;
    }
  }
  .nav a {
    padding-left: 0;
    padding-right: 0;
    margin-left: .2rem;
    margin-right: .2rem;
  }
  pre {
    white-space: pre;
    overflow-x: scroll;
    }
  }
}